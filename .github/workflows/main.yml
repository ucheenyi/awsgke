name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and Push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/api:${{ github.sha }}
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy Docker Image to EC2
        run: |
          PUBLIC_IP="52.4.69.114"
          echo "Deploying to EC2 instance at $PUBLIC_IP"
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.EC2_KEY_PAIR_PATH }} ec2-user@$PUBLIC_IP << 'EOF'
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/api:${{ github.sha }}
            sudo docker stop api || true
            sudo docker rm api || true
            sudo docker run -d --name api -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/api:${{ github.sha }}
          EOF

      - name: Verify API
        run: |
          PUBLIC_IP="54.23.4.5"
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" http://$PUBLIC_IP:8080)
          if [ "$RESPONSE" -ne 200 ]; then
            exit 1
          fi
